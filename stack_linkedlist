class Node:
    def __init__(self,data):
        self.data = data
        self.next = None

class stack:
    def __init__(self):
        self.head = None
    def isempty(self):
        if(self.head==None):
            return True
        else:
            return False
    def push(self,data):
        if(self.head ==None):
            self.head=Node(data)
            self.head.next = None
        else:
            newnode = Node(data)
            newnode.next = self.head
            self.head = newnode    
    def pop(self):
        if self.isempty():
            return None
        else:
            popnode = self.head
            self.head  = self.head.next
            popnode.next = None
            return popnode.data
    def peek(self):
        if(self.isempty()):
            return None
        else:
            return self.head.data                 
    def printstack(self):
        newnode = self.head
        while(newnode!=None):
            print(newnode.data)
            newnode = newnode.next

stc = stack()
stc.push(10)
stc.push(200)
stc.push(30)
stc.push(340)
stc.pop()
print(stc.peek())
